{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Castillo-jacqueline/Metodos-numericos-/blob/main/M%C3%A9todo%20Newton%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3154e14b",
      "metadata": {
        "id": "3154e14b"
      },
      "source": [
        "# *Metodo de Newton*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "id": "9d5e2287",
      "metadata": {
        "id": "9d5e2287"
      },
      "outputs": [],
      "source": [
        "#Ingresamos la librerias a utilizar\n",
        "from math import *\n",
        "import numpy as np\n",
        "import sympy as sp\n",
        "import matplotlib . pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "id": "db980446",
      "metadata": {
        "id": "db980446"
      },
      "outputs": [],
      "source": [
        "#Declaramos la funcion\n",
        "#Definimos una funcion para la funcion original\n",
        "def funcion1(x):\n",
        "    return ((x**3)-x-1)\n",
        "    #Definimos una funcion para su derivada\n",
        "def funcion1d(x):\n",
        "    return 3*x**2-1\n",
        "def funcion2(x):\n",
        "    return x-(funcion1(x)/funcion1d(x))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "679a51af",
      "metadata": {
        "id": "679a51af"
      },
      "outputs": [],
      "source": [
        "# Ingreso los datos por el problema\n",
        "p=1\n",
        "#uardamos los datos\n",
        "p0 = p\n",
        "#guarda valores iniciales del error y del número de iteraciones\n",
        "tol = 0.01 #float(input(\"Ingrese el valor de la tolerancia: \")) en este caso fue 10^-2\n",
        "nmax = 100 #float(input(\"Ingrese el número máximo de iteraciones: \"))\n",
        "error = 100\n",
        "niter = 0"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "id": "6b4c08a0",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6b4c08a0",
        "outputId": "a5582f32-770c-42c3-a5f9-e2fe45b646d2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "# iter\t\t p\t\t f(p) \t\t d(p)\t\t rm\t\t error\n",
            "0 \t\t 1.0000 \t -1.0000 \t 2.0000\t 1.5000\t 100.0000\n",
            "1 \t\t 1.500000 \t 0.875000 \t 5.750000\t 1.347826\t 0.500000\n",
            "2 \t\t 1.347826 \t 0.100682 \t 4.449905\t 1.325200\t 0.152174\n",
            "3 \t\t 1.325200 \t 0.002058 \t 4.268468\t 1.324718\t 0.022626\n",
            "4 \t\t 1.324718 \t 0.000001 \t 4.264635\t 1.324718\t 0.000482\n",
            "La raíz de la función dada en el intervalo [1.0000,1.3247182\n"
          ]
        }
      ],
      "source": [
        "# Método de Newton\n",
        "# Evaluo primer valor, m seria 1\n",
        "m = p0\n",
        "\n",
        "#Tomamos a \"m\" para poder evaluar en f(x) y f'(x)\n",
        "fm = funcion1(m)\n",
        "dm = funcion1d(m)\n",
        "rm = m-(fm/dm)\n",
        "print(\"# iter\\t\\t p\\t\\t f(p) \\t\\t d(p)\\t\\t rm\\t\\t error\")\n",
        "print(\"{0} \\t\\t {1:6.4f} \\t {2:6.4f} \\t {3:6.4f}\\t {4:6.4f}\\t {5:6.4f}\".format(niter, m, fm, dm,rm, error ))\n",
        "# ciclo iterativo\n",
        "while error > tol and niter < nmax:\n",
        "    m = m-(funcion1(m)/funcion1d(m))\n",
        "    fm= funcion1(m)\n",
        "    dm= funcion1d(m)\n",
        "    rm= m-(fm/dm)\n",
        "    error = abs(m - p )\n",
        "    niter += 1\n",
        "    print(\"{0} \\t\\t {1:6.6f} \\t {2:6.6f} \\t {3:6.6f}\\t {4:6.6f}\\t {5:6.6f}\".format(niter, m, fm, dm, rm, error ))\n",
        "    p=m\n",
        "print(\"La raíz de la función dada en el intervalo [{0:6.4f},{1:6.7f}\".format(p0 ,m))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "b59ace03",
      "metadata": {
        "id": "b59ace03"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Elaborado por Castillo Zaragoza Ximena Jacqueline**"
      ],
      "metadata": {
        "id": "eulGk-JmSdSq"
      },
      "id": "eulGk-JmSdSq"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.3"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}